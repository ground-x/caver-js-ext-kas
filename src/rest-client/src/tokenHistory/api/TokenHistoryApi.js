/*
 * Token History API
 * # Introduction  Token History API는 KLAY, FT (KIP-7, Labeled ERC-20), NFT (KIP-17, Labeled ERC-721) 토큰 정보, 이들 토큰을 주고받은 기록을 조회하는 기능을 제공합니다. 여러분은 특정 EOA가 KLAY를 주고받은 기록을 확인하거나 EOA가 가지고 있는 NFT 정보를 불러오는 등 Token History API를 다양하게 활용할 수 있습니다.   Token History API 사용에 관한 자세한 내용은 [튜토리얼](https://klaytn.com)을 확인하십시오.   이 문서 혹은 KAS에 관한 문의는 [개발자 포럼](https://forum.klaytn.com/)을 방문해 도움을 받으십시오
 *
 * OpenAPI spec version: 0.7.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient', '../model/InvalidQueryParameterValue', '../model/PageableTransfers', '../model/Transfers'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(
            require('../../ApiClient'),
            require('../model/InvalidQueryParameterValue'),
            require('../model/PageableTransfers'),
            require('../model/Transfers')
        )
    } else {
        // Browser globals (root is window)
        if (!root.TokenHistoryApi) {
            root.TokenHistoryApi = {}
        }
        root.TokenHistoryApi.TokenHistoryApi = factory(
            root.TokenHistoryApi.ApiClient,
            root.TokenHistoryApi.InvalidQueryParameterValue,
            root.TokenHistoryApi.PageableTransfers,
            root.TokenHistoryApi.Transfers
        )
    }
})(this, function(ApiClient, InvalidQueryParameterValue, PageableTransfers, Transfers) {
    /**
     * TokenHistory service.
     * @class TokenHistoryApi
     * @version 0.7.0
     */

    /**
     * Constructs a new TokenHistoryApi.
     * @alias TokenHistoryApi
     * @class
     * @param {ApiClient} [apiClient] Optional API client implementation to use,
     * default to {@link ApiClient#instance} if unspecified.
     */
    const exports = function(apiClient) {
        this.apiClient = apiClient || ApiClient.instance

        /**
         * Callback function to receive the result of the getTransfers operation.
         * @callback TokenHistoryApi~getTransfersCallback
         * @param {String} error Error message, if any.
         * @param {PageableTransfers} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */

        /**
         * getTransfers
         * 거래내역을 통합 조회합니다. 거래내역은 KLAY 전송 (`KlayTransfer`), FT 전송 (`FtTransfer`), NFT 전송 (`NftTransfer`)으로 나뉩니다.   ## FT/NFT 거래내역 조회 결과에 포함된 KlayTransfer   FT, NFT 전송의 경우 토큰 전송을 실행한 `KlayTransfer` 전송내역이 조회 결과에 포함됩니다. 이것은 FT/NFT 토큰 전송은 기본적으로 FT/NFT 컨트랙트 함수의 실행이기 때문이며 `transfer`는 토큰 전송 함수를 실행하는 트랜잭션에 대응하는 `KlayTransfer`를 응답에 포함합니다. 컨트랙트 함수를 실행하는 트랜잭션들은 대체로 KLAY를 전송하지 않기 때문에 FT, NFT 전송을 실행한 `KlayTransfer`의 `value`는 0일 수 있습니다.    ## 거래유형  * `kind` 파라메터를 설정하여 KLAY, FT, NFT 중 한 가지 유형을 골라 거래내역을 조회할 수 있습니다 * `kind`가 설정되지 않으면 모든 유형의 거래내역이 조회됩니다  ## 조회기간  * `range`의 경우 `range={from},{to}` 포맷으로 질의합니다 * `{from}`과 `{to}`가 정수일 경우 Unix time으로, 16진수 문자열일 경우 블록 번호로 간주합니다 * `{to}`값이 없는 경우 현재 시간 또는 최신 블록 번호가 사용됩니다 * 한 번에 불러올 수 있는 거래내역은 최대 과거 6개월 분량입니다(Unix time, 블록 두 경우 모두 해당).  ## Preset  * `presets` 쿼리 파라미터는 필수 파라미터입니다 * [Preset](https://www.klaytn.com)은 KAS Console에서 사전에 생성되어 있어야 합니다 * Preset ID는 KAS Console에서 확인하실 수 있습니다
         * @param {String} xChainId Klaytn 네트워크 체인 ID (1001 or 8217)
         * @param {String} presets (csv) 검색에 사용할 Preset ID들, Preset ID는 KAS Console에서 확인
         * @param {Object} opts Optional parameters
         * @param {String} opts.kind (csv) [“klay”, “ft”, “nft”] 중 포함 할 유형, 지정안될 경우 모든 유형을 조회
         * @param {String} opts.range 조회 범위 지정 (블록번호 또는 Unix time)
         * @param {Number} opts.size 응답 아이템 개수 (min=1, max=1000, default=100)
         * @param {String} opts.cursor 응답 오프셋
         * @param {TokenHistoryApi~getTransfersCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link PageableTransfers}
         */
        this.getTransfers = function(xChainId, presets, opts, callback) {
            opts = opts || {}
            const postBody = null

            // verify the required parameter 'xChainId' is set
            if (xChainId === undefined || xChainId === null) {
                throw new Error("Missing the required parameter 'xChainId' when calling getTransfers")
            }

            // verify the required parameter 'presets' is set
            if (presets === undefined || presets === null) {
                throw new Error("Missing the required parameter 'presets' when calling getTransfers")
            }

            const pathParams = {}
            const queryParams = {
                kind: opts.kind,
                range: opts.range,
                size: opts.size,
                cursor: opts.cursor,
                presets: presets,
            }
            const collectionQueryParams = {}
            const headerParams = {
                'x-chain-id': xChainId,
            }
            const formParams = {}

            const authNames = ['auth']
            const contentTypes = ['application/json']
            const accepts = ['application/json']
            const returnType = PageableTransfers

            return this.apiClient.callApi(
                '/v2/transfer',
                'GET',
                pathParams,
                queryParams,
                collectionQueryParams,
                headerParams,
                formParams,
                postBody,
                authNames,
                contentTypes,
                accepts,
                returnType,
                callback
            )
        }

        /**
         * Callback function to receive the result of the getTransfersByEoa operation.
         * @callback TokenHistoryApi~getTransfersByEoaCallback
         * @param {String} error Error message, if any.
         * @param {PageableTransfers} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */

        /**
         * getTransfersByEoa
         * 특정 EOA의 토큰 거래내역을 조회합니다. 기능적으로 `GET /v2/transfer`와 같습니다. 단, 결과로 반환된 Transfer 객체에서 이 EOA가 토큰을 받았다면 `to`가, 토큰을 보냈다면 `from`이 EOA와 같습니다.     거래내역은 KLAY 전송 (`KlayTransfer`), FT 전송 (`FtTransfer`), NFT 전송 (`NftTransfer`)으로 나뉘며 FT, NFT 전송의 경우 토큰 전송을 실행한 `KlayTransfer` 전송내역이 조회 결과에 포함됩니다. FT, NFT 전송을 실행한 `KlayTransfer`의 `value`는 0일 수 있습니다. 이와 관련된 자세한 설명은 `GET /v2/transfer`를 참조하여 주시기 바랍니다.  ## 거래유형  * `kind` 파라메터를 설정하여 여러 유형의 거래내역을 조회할 수 있습니다 * `kind`가 설정되지 않으면 모든 유형의 거래내역이 조회됩니다  ## 조회기간  * `range`의 경우 `range={from},{to}` 포맷으로 질의합니다 * `{from}`과 `{to}`가 정수일 경우 Unix time으로, 16진수 문자열일 경우 블록 번호로 간주합니다 * `{to}`값이 없는 경우 현재 시간 또는 최신 블록 번호가 사용됩니다 * 최대 검색기간은 6개월로 제한됩니다 (Unix time, 블록 두 경우 모두 해당)
         * @param {String} xChainId Klaytn 체인 네트워크 ID (1001 or 8217)
         * @param {String} address 검색기준이 되는 EOA, 검색결과의 from 또는 to가 제시된 address값과 일치
         * @param {Object} opts Optional parameters
         * @param {String} opts.kind (csv) [“klay”, “ft”, “nft”] 중 포함 할 유형, 지정안될 경우 모든 유형을 조회
         * @param {String} opts.caFilter 조회할 FT 또는 NFT 컨트랙트의 주소, 설정될 경우 `transferType`이 \"ft\" 또는 \"nft\"인 것들 중 ca-filter 값과 같은 것들만 결과물로 반환.
         * @param {String} opts.range (csv) 조회 범위 지정 (블록번호 또는 Unix time)
         * @param {Number} opts.size 응답 아이템 개수(min=1, max=1000, default=100)
         * @param {String} opts.cursor 특정 위치를 지정하기 위한 오프셋
         * @param {TokenHistoryApi~getTransfersByEoaCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link PageableTransfers}
         */
        this.getTransfersByEoa = function(xChainId, address, opts, callback) {
            opts = opts || {}
            const postBody = null

            // verify the required parameter 'xChainId' is set
            if (xChainId === undefined || xChainId === null) {
                throw new Error("Missing the required parameter 'xChainId' when calling getTransfersByEoa")
            }

            // verify the required parameter 'address' is set
            if (address === undefined || address === null) {
                throw new Error("Missing the required parameter 'address' when calling getTransfersByEoa")
            }

            const pathParams = {
                address: address,
            }
            const queryParams = {
                kind: opts.kind,
                'ca-filter': opts.caFilter,
                range: opts.range,
                size: opts.size,
                cursor: opts.cursor,
            }
            const collectionQueryParams = {}
            const headerParams = {
                'x-chain-id': xChainId,
            }
            const formParams = {}

            const authNames = ['auth']
            const contentTypes = ['application/json']
            const accepts = ['application/json']
            const returnType = PageableTransfers

            return this.apiClient.callApi(
                '/v2/transfer/account/{address}',
                'GET',
                pathParams,
                queryParams,
                collectionQueryParams,
                headerParams,
                formParams,
                postBody,
                authNames,
                contentTypes,
                accepts,
                returnType,
                callback
            )
        }

        /**
         * Callback function to receive the result of the getTransfersByTxHash operation.
         * @callback TokenHistoryApi~getTransfersByTxHashCallback
         * @param {String} error Error message, if any.
         * @param {Transfers} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */

        /**
         * getTransfersByTxHash
         * 트랜잭션 해시로 거래내역을 조회합니다. 거래내역은 KLAY 전송 (`KlayTransfer`), FT 전송 (`FtTransfer`), NFT 전송 (`NftTransfer`)으로 나뉘며 FT, NFT 전송의 경우 토큰 전송을 실행한 `KlayTransfer` 전송내역이 조회 결과에 포함됩니다. FT, NFT 전송을 실행한 `KlayTransfer`의 `value`는 0일 수 있습니다. 이와 관련된 자세한 설명은 `GET /v2/transfer`를 참조하여 주시기 바랍니다.
         * @param {String} xChainId Klaytn 네트워크 체인 ID (1001 or 8217)
         * @param {String} transactionHash 조회할 트랜잭션 해시
         * @param {TokenHistoryApi~getTransfersByTxHashCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Transfers}
         */
        this.getTransfersByTxHash = function(xChainId, transactionHash, callback) {
            const postBody = null

            // verify the required parameter 'xChainId' is set
            if (xChainId === undefined || xChainId === null) {
                throw new Error("Missing the required parameter 'xChainId' when calling getTransfersByTxHash")
            }

            // verify the required parameter 'transactionHash' is set
            if (transactionHash === undefined || transactionHash === null) {
                throw new Error("Missing the required parameter 'transactionHash' when calling getTransfersByTxHash")
            }

            const pathParams = {
                'transaction-hash': transactionHash,
            }
            const queryParams = {}
            const collectionQueryParams = {}
            const headerParams = {
                'x-chain-id': xChainId,
            }
            const formParams = {}

            const authNames = ['auth']
            const contentTypes = ['application/json']
            const accepts = ['application/json']
            const returnType = Transfers

            return this.apiClient.callApi(
                '/v2/transfer/tx/{transaction-hash}',
                'GET',
                pathParams,
                queryParams,
                collectionQueryParams,
                headerParams,
                formParams,
                postBody,
                authNames,
                contentTypes,
                accepts,
                returnType,
                callback
            )
        }
    }

    return exports
})
