/**
 * Token History API
 * # Introduction  Token History API allows you to query the transaction history of KLAY, FTs (KIP-7 and Labelled ERC-20), NFTs (KIP-17 and Labelled ERC-721), and MTs (KIP-37 and Labelled ERC-1155). You can track KLAY's transaction history or retrieve NFT-related data of a certain EOA.   For more details on using Token History API, please refer to the [Tutorial](https://docs.klaytnapi.com/tutorial).   For any inquiries on this document or KAS in general, please visit [Developer Forum](https://forum.klaytn.com/).
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

const ApiClient = require('../../ApiClient')
const ErrorResponse = require('../model/ErrorResponse')
const PageableTransfers = require('../model/PageableTransfers')
const Transfers = require('../model/Transfers')

/**
 * TokenHistory service.
 * @class TokenHistoryApi
 * @version 1.0
 */
class TokenHistoryApi {
    /**
     * Constructs a new TokenHistoryApi.
     * @alias TokenHistoryApi
     * @class
     * @param {ApiClient} [apiClient] Optional API client implementation to use,
     * default to {@link ApiClient#instance} if unspecified.
     */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance
    }

    /**
     * Callback function to receive the result of the getTransfers operation.
     * @callback TokenHistoryApi~getTransfersCallback
     * @param {String} error Error message, if any.
     * @param {PageableTransfers} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query received and sent transfers of tokens
     * Query all transaction history. Transaction history is divided into KLAY Transfer (&#x60;KlayTransfer&#x60;), FT Transfer (&#x60;FtTransfer&#x60;), NFT Transfer (&#x60;NftTransfer&#x60;), and MT Transfer (&#x60;MtTransfer&#x60;). &lt;p&gt;&lt;/p&gt;  ## KlayTransfer in FT/NFT/MT transactions &lt;p&gt;&lt;/p&gt;  For transfers of FTs, NFTs, or MTs, &#x60;KlayTransfer&#x60; history will also be included in the query result. This is because FT/NFT/MT transfers are essentially execution of a corresponding contract function, and the response for the transfer includes &#x60;KlayTransfer&#x60;, which is equivalent to the transaction for sending KLAY. Since most transactions that execute contract functions do not usually send KLAY, the &#x60;value&#x60; of &#x60;KlayTransfer&#x60; that transfered NT, NFT, and MT may be zero. By using the &#x60;exclude-zero-klay&#x3D;true&#x60; query, &#x60;KlayTransfer&#x60; can be excluded. &lt;p&gt;&lt;/p&gt;  ## Transaction type&lt;p&gt;&lt;/p&gt;  * You can choose KLAY, FT, NFT or MT by setting &#x60;kind&#x60; parameter to get transaction history of a certain type or a combination of types.&lt;br&gt; * If you don&#x27;t set the &#x60;kind&#x60; parameter, all transaction types will be returned.&lt;p&gt;&lt;/p&gt;&lt;br&gt;  ## Date range&lt;p&gt;&lt;/p&gt;  * &#x60;range&#x60; is queried in the form of &#x60;range&#x3D;{from},{to}&#x60;&lt;br&gt; * &#x60;{from}&#x60; and &#x60;{to}&#x60; will be considered Unix time in the case of a decimal number, and block number in the case of a hexadecimal number&lt;br&gt; * When there is no value for &#x60;{to}&#x60;, current time or the latest block number will be used.&lt;br&gt; * You can retrieve the transaction history from the past 6 months maximum. (for both Unix time and block number)&lt;p&gt;&lt;/p&gt;&lt;br&gt;  ## Preset&lt;p&gt;&lt;/p&gt;  Preset is a collection of EOA and FT, NFT and MT contracts. You can use it to repetitively retrieve transaction history for certain accounts quickly and easily.&lt;p&gt;&lt;/p&gt;  * The parameter &#x60;presets&#x60; is a required parameter.&lt;br&gt; * [Preset](https://console.klaytnapi.com/en/service/th/preset/list) needs to be created on KAS Console in advance.&lt;br&gt; * You can check your Preset ID on KAS Console. For more information please visit [Preset](https://docs.klaytnapi.com/v/en/tutorial/th-api/th-api-token-history#preset).&lt;p&gt;&lt;/p&gt;&lt;br&gt;  ## Size&lt;p&gt;&lt;/p&gt;  * The query parameter &#x60;size&#x60; is optional. (Min &#x3D; 1, Max &#x3D; 1000, Default &#x3D; 100)&lt;br&gt; * Returns an error when given a negative number&lt;br&gt; * Uses default value (&#x60;size&#x3D;100&#x60;) when &#x60;size&#x3D;0&#x60;&lt;br&gt; * Uses the maximum value (&#x60;size&#x3D;1000&#x60;) when given a value higher than the maximum value.&lt;br&gt;
     * @param {Object} opts Optional parameters
     * @param {TokenHistoryApi~getTransfersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link PageableTransfers}
     */
    getTransfers(xChainId, presets, opts, callback) {
        opts = opts || {}
        const postBody = null

        const pathParams = {}
        const queryParams = {
            kind: opts.kind,
            range: opts.range,
            size: opts.size,
            cursor: opts.cursor,
            'exclude-zero-klay': opts.excludeZeroKlay,
            presets: presets,
        }
        const headerParams = {
            'x-chain-id': xChainId,
        }
        const formParams = {}

        const authNames = ['basic']
        const contentTypes = []
        const accepts = ['application/json']
        const returnType = PageableTransfers

        return this.apiClient.callApi(
            '/v2/transfer',
            'GET',
            pathParams,
            queryParams,
            headerParams,
            formParams,
            postBody,
            authNames,
            contentTypes,
            accepts,
            returnType,
            callback
        )
    }
    /**
     * Callback function to receive the result of the getTransfersByEoa operation.
     * @callback TokenHistoryApi~getTransfersByEoaCallback
     * @param {String} error Error message, if any.
     * @param {PageableTransfers} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query received and sent transfers of tokens with EOA
     * Query token transaction history for a certain EOA. Functionally, it is same as &#x60;GET /v2/transfer&#x60;. If the EOA received the token, &#x60;to&#x60; is same as the EOA, and if the EOA sent the token, &#x60;from&#x60; is the same as the EOA in the returned transfer object.     Transaction history is divided into KLAY transfer (&#x60;KlayTransfer&#x60;), FT transfer (&#x60;FtTransfer&#x60;), NFT transfer (&#x60;NftTransfer&#x60;), MT transfer (&#x60;MtTransfer&#x60;). For FT, NFT, MT transfers, history of &#x60;KlayTransfer&#x60; will be included in the result. &#x60;KlayTransfer&#x60; included in FT, NFT, MT transfers may have a &#x60;value&#x60; of 0. For more details, please refer to &#x60;GET /v2/transfer&#x60;.&lt;p&gt;&lt;/p&gt;  ## Transaction type&lt;p&gt;&lt;/p&gt;  * You can set the &#x60;kind&#x60; parameter to query different types of transactions.&lt;br&gt; * Not setting the &#x60;kind&#x60; parameter will query all types of transactions.&lt;p&gt;&lt;/p&gt;&lt;br&gt;  ## Date range&lt;p&gt;&lt;/p&gt;  * &#x60;range&#x60; is queried in the form of &#x60;range&#x3D;{from},{to}&#x60;&lt;br&gt; * &#x60;{from}&#x60; and &#x60;{to}&#x60; will be considered Unix time in the case of a decimal number, and block number in the case of a hexadecimal number&lt;br&gt; * When there is no value for &#x60;{to}&#x60;, current time or the latest block number will be used.&lt;br&gt; * You can retrieve the transaction history from the past 6 months maximum. (for both unix time and block number)&lt;p&gt;&lt;/p&gt;&lt;br&gt;  ## Size&lt;p&gt;&lt;/p&gt;  * The query parameter &#x60;size&#x60; is optional. (Min &#x3D; 1, Max &#x3D; 1000, Default &#x3D; 100)&lt;br&gt; * Returns an error when given a negative number.&lt;br&gt; * Uses default value (&#x60;size&#x3D;100&#x60;) when given a 0.&lt;br&gt; * Uses the maximum value (&#x60;size&#x3D;1000&#x60;) when given a value higher than 1000.&lt;br&gt;
     * @param {Object} opts Optional parameters
     * @param {TokenHistoryApi~getTransfersByEoaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link PageableTransfers}
     */
    getTransfersByEoa(xChainId, address, opts, callback) {
        opts = opts || {}
        const postBody = null

        const pathParams = {
            address: address,
        }
        const queryParams = {
            kind: opts.kind,
            'ca-filter': opts.caFilter,
            range: opts.range,
            size: opts.size,
            cursor: opts.cursor,
            'exclude-zero-klay': opts.excludeZeroKlay,
            'from-only': opts.fromOnly,
            'to-only': opts.toOnly,
        }
        const headerParams = {
            'x-chain-id': xChainId,
        }
        const formParams = {}

        const authNames = ['basic']
        const contentTypes = []
        const accepts = ['application/json']
        const returnType = PageableTransfers

        return this.apiClient.callApi(
            '/v2/transfer/account/{address}',
            'GET',
            pathParams,
            queryParams,
            headerParams,
            formParams,
            postBody,
            authNames,
            contentTypes,
            accepts,
            returnType,
            callback
        )
    }
    /**
     * Callback function to receive the result of the getTransfersByTxHash operation.
     * @callback TokenHistoryApi~getTransfersByTxHashCallback
     * @param {String} error Error message, if any.
     * @param {Transfers} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query received and sent transfers of tokens with transaction hash
     * Get transaction history by transaction hash. Transaction history is divided into KLAY transfer (&#x60;KlayTransfer&#x60;), FT transfer (&#x60;FtTransfer&#x60;), NFT transfer (&#x60;NftTransfer&#x60;), MT transfer (&#x60;MtTransfer&#x60;). For FT, NFT, MT transfers, history of &#x60;KlayTransfer&#x60; will be included in the result. &#x60;KlayTransfer&#x60; included in FT, NFT, MT transfers may have a &#x60;value&#x60; of 0. For more details, please refer to &#x60;GET /v2/transfer&#x60;.
     * @param {TokenHistoryApi~getTransfersByTxHashCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Transfers}
     */
    getTransfersByTxHash(xChainId, transactionHash, callback) {
        const postBody = null

        const pathParams = {
            'transaction-hash': transactionHash,
        }
        const queryParams = {}
        const headerParams = {
            'x-chain-id': xChainId,
        }
        const formParams = {}

        const authNames = ['basic']
        const contentTypes = []
        const accepts = ['application/json']
        const returnType = Transfers

        return this.apiClient.callApi(
            '/v2/transfer/tx/{transaction-hash}',
            'GET',
            pathParams,
            queryParams,
            headerParams,
            formParams,
            postBody,
            authNames,
            contentTypes,
            accepts,
            returnType,
            callback
        )
    }
}
module.exports = TokenHistoryApi
