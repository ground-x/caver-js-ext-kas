/*
 * Token History API
 * # Introduction  Token History API는 KLAY, FT (KIP-7, Labeled ERC-20), NFT (KIP-17, Labeled ERC-721) 토큰 정보, 이들 토큰을 주고받은 기록을 조회하는 기능을 제공합니다. 여러분은 특정 EOA가 KLAY를 주고받은 기록을 확인하거나 EOA가 가지고 있는 NFT 정보를 불러오는 등 Token History API를 다양하게 활용할 수 있습니다.   Token History API 사용에 관한 자세한 내용은 [튜토리얼](https://klaytn.com)을 확인하십시오.   이 문서 혹은 KAS에 관한 문의는 [개발자 포럼](https://forum.klaytn.com/)을 방문해 도움을 받으십시오
 *
 * OpenAPI spec version: 0.7.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../../ApiClient'))
    } else {
        // Browser globals (root is window)
        if (!root.TokenHistoryApi) {
            root.TokenHistoryApi = {}
        }
        root.TokenHistoryApi.Nft = factory(root.TokenHistoryApi.ApiClient)
    }
})(this, function(ApiClient) {
    /**
     * The Nft model module.
     * @class Nft
     * @version 0.7.0
     */

    /**
     * Constructs a new <code>Nft</code>.
     * @alias Nft
     * @class
     * @param owner {String} 소유자 EOA (20-byte)
     * @param previousOwner {String} 직전 소유자 EOA (20-byte)
     * @param tokenId {String} 토큰 ID (16진수)
     * @param tokenUri {String} 토큰 고유의 URL
     * @param transactionHash {String} 마지막 트랜잭션 해시 (32-byte)
     * @param createdAt {Number} 토큰이 생성된 시점 (timestamp)
     * @param updatedAt {Number} 토큰 정보가 마지막으로 변경된 시점 (timestamp)
     */
    const Nft = function(owner, previousOwner, tokenId, tokenUri, transactionHash, createdAt, updatedAt) {
        this.owner = owner
        this.previousOwner = previousOwner
        this.tokenId = tokenId
        this.tokenUri = tokenUri
        this.transactionHash = transactionHash
        this.createdAt = createdAt
        this.updatedAt = updatedAt
    }

    /**
     * Constructs a <code>Nft</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {Nft} obj Optional instance to populate.
     * @return {Nft} The populated <code>Nft</code> instance.
     * @memberof Nft
     */
    Nft.constructFromObject = function(data, obj) {
        if (data) {
            obj = obj || new Nft()
            if (data.hasOwnProperty('owner')) obj.owner = ApiClient.convertToType(data.owner, 'String')
            if (data.hasOwnProperty('previousOwner')) obj.previousOwner = ApiClient.convertToType(data.previousOwner, 'String')
            if (data.hasOwnProperty('tokenId')) obj.tokenId = ApiClient.convertToType(data.tokenId, 'String')
            if (data.hasOwnProperty('tokenUri')) obj.tokenUri = ApiClient.convertToType(data.tokenUri, 'String')
            if (data.hasOwnProperty('transactionHash')) obj.transactionHash = ApiClient.convertToType(data.transactionHash, 'String')
            if (data.hasOwnProperty('createdAt')) obj.createdAt = ApiClient.convertToType(data.createdAt, 'Number')
            if (data.hasOwnProperty('updatedAt')) obj.updatedAt = ApiClient.convertToType(data.updatedAt, 'Number')
        }
        return obj
    }

    /**
     * 소유자 EOA (20-byte)
     * @member {String} owner
     * @memberof Nft
     */
    Nft.prototype.owner = undefined

    /**
     * 직전 소유자 EOA (20-byte)
     * @member {String} previousOwner
     * @memberof Nft
     */
    Nft.prototype.previousOwner = undefined

    /**
     * 토큰 ID (16진수)
     * @member {String} tokenId
     * @memberof Nft
     */
    Nft.prototype.tokenId = undefined

    /**
     * 토큰 고유의 URL
     * @member {String} tokenUri
     * @memberof Nft
     */
    Nft.prototype.tokenUri = undefined

    /**
     * 마지막 트랜잭션 해시 (32-byte)
     * @member {String} transactionHash
     * @memberof Nft
     */
    Nft.prototype.transactionHash = undefined

    /**
     * 토큰이 생성된 시점 (timestamp)
     * @member {Number} createdAt
     * @memberof Nft
     */
    Nft.prototype.createdAt = undefined

    /**
     * 토큰 정보가 마지막으로 변경된 시점 (timestamp)
     * @member {Number} updatedAt
     * @memberof Nft
     */
    Nft.prototype.updatedAt = undefined

    return Nft
})
