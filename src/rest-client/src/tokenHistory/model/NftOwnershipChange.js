/*
 * Token History API
 * # Introduction  Token History API는 KLAY, FT (KIP-7, Labeled ERC-20), NFT (KIP-17, Labeled ERC-721) 토큰 정보, 이들 토큰을 주고받은 기록을 조회하는 기능을 제공합니다. 여러분은 특정 EOA가 KLAY를 주고받은 기록을 확인하거나 EOA가 가지고 있는 NFT 정보를 불러오는 등 Token History API를 다양하게 활용할 수 있습니다.   Token History API 사용에 관한 자세한 내용은 [튜토리얼](https://klaytn.com)을 확인하십시오.   이 문서 혹은 KAS에 관한 문의는 [개발자 포럼](https://forum.klaytn.com/)을 방문해 도움을 받으십시오
 *
 * OpenAPI spec version: 0.7.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../../ApiClient'))
    } else {
        // Browser globals (root is window)
        if (!root.TokenHistoryApi) {
            root.TokenHistoryApi = {}
        }
        root.TokenHistoryApi.NftOwnershipChange = factory(root.TokenHistoryApi.ApiClient)
    }
})(this, function(ApiClient) {
    /**
     * The NftOwnershipChange model module.
     * @class NftOwnershipChange
     * @version 0.7.0
     */

    /**
     * Constructs a new <code>NftOwnershipChange</code>.
     * @alias NftOwnershipChange
     * @class
     * @param from {String} 보낸 사람 (직전 소유자) EOA (20-byte)
     * @param to {String} 받은 사람 (이 시점의 소유자) EOA (20-byte)
     * @param timestamp {Number} NFT 소유권이 변경된 시점 (timestamp)
     */
    const NftOwnershipChange = function(from, to, timestamp) {
        this.from = from
        this.to = to
        this.timestamp = timestamp
    }

    /**
     * Constructs a <code>NftOwnershipChange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {NftOwnershipChange} obj Optional instance to populate.
     * @return {NftOwnershipChange} The populated <code>NftOwnershipChange</code> instance.
* @memberof NftOwnershipChange
     */
    NftOwnershipChange.constructFromObject = function(data, obj) {
        if (data) {
            obj = obj || new NftOwnershipChange()
            if (data.hasOwnProperty('from')) obj.from = ApiClient.convertToType(data.from, 'String')
            if (data.hasOwnProperty('to')) obj.to = ApiClient.convertToType(data.to, 'String')
            if (data.hasOwnProperty('timestamp')) obj.timestamp = ApiClient.convertToType(data.timestamp, 'Number')
        }
        return obj
    }

    /**
     * 보낸 사람 (직전 소유자) EOA (20-byte)
     * @member {String} from
* @memberof NftOwnershipChange
     */
    NftOwnershipChange.prototype.from = undefined

    /**
     * 받은 사람 (이 시점의 소유자) EOA (20-byte)
     * @member {String} to
* @memberof NftOwnershipChange
     */
    NftOwnershipChange.prototype.to = undefined

    /**
     * NFT 소유권이 변경된 시점 (timestamp)
     * @member {Number} timestamp
* @memberof NftOwnershipChange
     */
    NftOwnershipChange.prototype.timestamp = undefined

    return NftOwnershipChange
})
