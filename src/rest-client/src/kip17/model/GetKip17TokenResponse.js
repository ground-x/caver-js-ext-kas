/**
 * KIP-17 API
 * # Introduction The KIP-17 API helps BApp (Blockchain Application) developers to manage contracts and tokens created in accordance with the [KIP-17](https://docs.klaytnapi.com/v/en/api#kip-17-api) standard, which is Klaytn's technical speficication for Non-Fungible Tokens.  The functionality of the multiple endpoints enables you to do the following actions: - deploy smart contracts - manage the entire life cycle of an NFT from minting, to sending and burning - get contract or token data - authorize a third party to execute token transfers - view token ownership history  For more details on KAS, please refer to [KAS Docs](https://docs.klaytnapi.com/). If you have any questions or comments, please leave them in the [Klaytn Developers Forum](http://forum.klaytn.com).    **alias**  When a method of the KIP-17 API requires a contract address, you can use the contract **alias**. You can give the contract an alias when deploying, and use it in place of the complicated address.  # Fee Payer Options KAS KIP-17 supports four ways to pay the transaction fees.<br />  **1. Only using KAS Global FeePayer Account** <br /> Sends all transactions using KAS Global FeePayer Account. ``` {     \"options\": {       \"enableGlobalFeePayer\": true     } } ``` <br />  **2. Using User FeePayer Account** <br /> Sends all transactions using User FeePayer Account. ``` {   \"options\": {     \"enableGlobalFeePayer\": false,     \"userFeePayer\": {       \"krn\": \"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\",       \"address\": \"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\"     }   } } ``` <br />  **3. Using both KAS Global FeePayer Account + User FeePayer Account** <br /> Sends transactions using User FeePayer Account by default, and switches to the KAS Global FeePayer Account when balances are insufficient. ``` {   \"options\": {     \"enableGlobalFeePayer\": true,     \"userFeePayer\": {       \"krn\": \"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\",       \"address\": \"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\"     }   } } ``` <br />  **4. Not using FeePayer Account** <br /> Sends transactions the default way, paying the transaction fee from the user's account. ``` {   \"options\": {     \"enableGlobalFeePayer\": false   } } ``` <br />  # Error Code This section contains the errors that might occur when using the KIP-17 API. KAS uses HTTP status codes. More details can be found in this [link](https://developer.mozilla.org/en/docs/Web/HTTP/Status).
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

const ApiClient = require('../../ApiClient')

/**
 * The GetKip17TokenResponse model module.
 * @class GetKip17TokenResponse
 * @version 1.0
 */
class GetKip17TokenResponse {
    /**
     * Constructs a new <code>GetKip17TokenResponse</code>.
     * @alias GetKip17TokenResponse
     * @class
     * @param createdAt {Number} The UNIX timestamp of when the token was minted.
     * @param owner {String} The Klaytn accound address of the current owner.
     * @param previousOwner {String} The Klaytn account address of the previous owner.
     * @param tokenId {String} The ID assigned to the token.
     * @param tokenUri {String} The URI that contains the tokens's metadata.
     * @param transactionHash {String} The hash of the latest transaction that caused a token ownership change.
     * @param updatedAt {Number} The UNIX timestamp of the last token ownership change.
     */

    constructor(createdAt, owner, previousOwner, tokenId, tokenUri, transactionHash, updatedAt) {
        this.createdAt = createdAt
        this.owner = owner
        this.previousOwner = previousOwner
        this.tokenId = tokenId
        this.tokenUri = tokenUri
        this.transactionHash = transactionHash
        this.updatedAt = updatedAt
    }

    /**
     * Constructs a <code>GetKip17TokenResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {GetKip17TokenResponse} obj Optional instance to populate.
     * @return {GetKip17TokenResponse} The populated <code>GetKip17TokenResponse</code> instance.
     * @memberof GetKip17TokenResponse
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetKip17TokenResponse()

            if (data.hasOwnProperty('createdAt')) {
                obj.createdAt = ApiClient.convertToType(data.createdAt, 'Number')
            }
            if (data.hasOwnProperty('owner')) {
                obj.owner = ApiClient.convertToType(data.owner, 'String')
            }
            if (data.hasOwnProperty('previousOwner')) {
                obj.previousOwner = ApiClient.convertToType(data.previousOwner, 'String')
            }
            if (data.hasOwnProperty('tokenId')) {
                obj.tokenId = ApiClient.convertToType(data.tokenId, 'String')
            }
            if (data.hasOwnProperty('tokenUri')) {
                obj.tokenUri = ApiClient.convertToType(data.tokenUri, 'String')
            }
            if (data.hasOwnProperty('transactionHash')) {
                obj.transactionHash = ApiClient.convertToType(data.transactionHash, 'String')
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj.updatedAt = ApiClient.convertToType(data.updatedAt, 'Number')
            }
        }
        return obj
    }
}

/**
 * The UNIX timestamp of when the token was minted.
 * @type {Number}
 * @memberof GetKip17TokenResponse
 */
GetKip17TokenResponse.prototype.createdAt = undefined
/**
 * The Klaytn accound address of the current owner.
 * @type {String}
 * @memberof GetKip17TokenResponse
 */
GetKip17TokenResponse.prototype.owner = undefined
/**
 * The Klaytn account address of the previous owner.
 * @type {String}
 * @memberof GetKip17TokenResponse
 */
GetKip17TokenResponse.prototype.previousOwner = undefined
/**
 * The ID assigned to the token.
 * @type {String}
 * @memberof GetKip17TokenResponse
 */
GetKip17TokenResponse.prototype.tokenId = undefined
/**
 * The URI that contains the tokens's metadata.
 * @type {String}
 * @memberof GetKip17TokenResponse
 */
GetKip17TokenResponse.prototype.tokenUri = undefined
/**
 * The hash of the latest transaction that caused a token ownership change.
 * @type {String}
 * @memberof GetKip17TokenResponse
 */
GetKip17TokenResponse.prototype.transactionHash = undefined
/**
 * The UNIX timestamp of the last token ownership change.
 * @type {Number}
 * @memberof GetKip17TokenResponse
 */
GetKip17TokenResponse.prototype.updatedAt = undefined

module.exports = GetKip17TokenResponse
