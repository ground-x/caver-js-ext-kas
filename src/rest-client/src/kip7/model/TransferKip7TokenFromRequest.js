/*
 * KIP-7 API
 * # Introduction KIP-7 API is a RESTful API for managing KIP-7 contracts and tokens that follow the [KIP-7 Fungible Token Standard](https://kips.klaytn.com/KIPs/kip-7).   You can deploy contracts and send tokens using the default contract managing account (`deployer`) and an `alias`. And by using SDK like caver,  you can manage your contracts and tokens using [Wallet API](https://refs.klaytnapi.com/en/wallet/latest) for contracts created on the Klaytn Network.     # Error Codes  ## 400: Bad Request   | Code | Messages |   | --- | --- |  | 1130050 | incorrect request; spender 1130107 | incorrect bookmark 1134410 | invalid address; to</br>invalid address; owner</br>invalid address; address 1134411 | invalid amount; amount |  ## 404: Not Found   | Code | Messages |  | --- | --- |  | 1134504 | contract not found 1134506 | deployer not found |   ## 409: Conflict   | Code | Messages |   | --- | --- |   | 1134900 | duplicate alias 1134902 | contract already paused 1134903 | contract already unpaused |
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../../ApiClient'))
    } else {
        // Browser globals (root is window)
        if (!root.Kip7Api) {
            root.Kip7Api = {}
        }
        root.Kip7Api.TransferKip7TokenFromRequest = factory(root.Kip7Api.ApiClient)
    }
})(this, function(ApiClient) {
    /**
     * The TransferKip7TokenFromRequest model module.
     * @class TransferKip7TokenFromRequest
     * @version 1.0
     */

    /**
     * Constructs a new <code>TransferKip7TokenFromRequest</code>.
     * @alias TransferKip7TokenFromRequest
     * @class
     * @param spender {String} Klaytn account address to send tokens
     * @param owner {String} Klaytn account address of the owner delegating the token transfer
     * @param to {String} Klaytn account address to receive tokens
     * @param amount {String} Transfer amount (in hexadecimal)
     */
    const TransferKip7TokenFromRequest = function(spender, owner, to, amount) {
        this.spender = spender
        this.owner = owner
        this.to = to
        this.amount = amount
    }

    /**
     * Constructs a <code>TransferKip7TokenFromRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {TransferKip7TokenFromRequest} obj Optional instance to populate.
     * @return {TransferKip7TokenFromRequest} The populated <code>TransferKip7TokenFromRequest</code> instance.
     * @memberof TransferKip7TokenFromRequest
     */
    TransferKip7TokenFromRequest.constructFromObject = function(data, obj) {
        if (data) {
            obj = obj || new TransferKip7TokenFromRequest()
            if (data.hasOwnProperty('spender')) obj.spender = ApiClient.convertToType(data.spender, 'String')
            if (data.hasOwnProperty('owner')) obj.owner = ApiClient.convertToType(data.owner, 'String')
            if (data.hasOwnProperty('to')) obj.to = ApiClient.convertToType(data.to, 'String')
            if (data.hasOwnProperty('amount')) obj.amount = ApiClient.convertToType(data.amount, 'String')
        }
        return obj
    }

    /**
     * Klaytn account address to send tokens
     * @type {String}
     * @memberof TransferKip7TokenFromRequest
     */
    TransferKip7TokenFromRequest.prototype.spender = undefined

    /**
     * Klaytn account address of the owner delegating the token transfer
     * @type {String}
     * @memberof TransferKip7TokenFromRequest
     */
    TransferKip7TokenFromRequest.prototype.owner = undefined

    /**
     * Klaytn account address to receive tokens
     * @type {String}
     * @memberof TransferKip7TokenFromRequest
     */
    TransferKip7TokenFromRequest.prototype.to = undefined

    /**
     * Transfer amount (in hexadecimal)
     * @type {String}
     * @memberof TransferKip7TokenFromRequest
     */
    TransferKip7TokenFromRequest.prototype.amount = undefined

    return TransferKip7TokenFromRequest
})
