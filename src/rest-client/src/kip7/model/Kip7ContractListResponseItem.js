/*
 * KIP-7 API
 * # Introduction KIP-7 API is a RESTful API for managing KIP-7 contracts and tokens that follow the [KIP-7 Fungible Token Standard](https://kips.klaytn.com/KIPs/kip-7).   You can deploy contracts and send tokens using the default contract managing account (`deployer`) and an `alias`. And by using SDK like caver,  you can manage your contracts and tokens using [Wallet API](https://refs.klaytnapi.com/en/wallet/latest) for contracts created on the Klaytn Network.     # Error Codes  ## 400: Bad Request   | Code | Messages |   | --- | --- |  | 1130050 | incorrect request; spender 1130107 | incorrect bookmark 1134410 | invalid address; to</br>invalid address; owner</br>invalid address; address 1134411 | invalid amount; amount |  ## 404: Not Found   | Code | Messages |  | --- | --- |  | 1134504 | contract not found 1134506 | deployer not found |   ## 409: Conflict   | Code | Messages |   | --- | --- |   | 1134900 | duplicate alias 1134902 | contract already paused 1134903 | contract already unpaused |
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../../ApiClient'))
    } else {
        // Browser globals (root is window)
        if (!root.Kip7Api) {
            root.Kip7Api = {}
        }
        root.Kip7Api.Kip7ContractListResponseItem = factory(root.Kip7Api.ApiClient)
    }
})(this, function(ApiClient) {
    /**
     * The Kip7ContractListResponseItem model module.
     * @class Kip7ContractListResponseItem
     * @version 1.0
     */

    /**
     * Constructs a new <code>Kip7ContractListResponseItem</code>.
     * @alias Kip7ContractListResponseItem
     * @class
     * @param address {String} Contract address
     * @param alias {String} Contract alias
     * @param decimals {Number} Token decimal place
     * @param name {String} Contract name
     * @param status {String} Contract deploy status[`init`,`submitted`,`deployed`]
     * @param symbol {String} Contract symbol
     * @param totalSupply {String} Total supply (in hexadecimal)
     */
    const Kip7ContractListResponseItem = function(address, alias, decimals, name, status, symbol, totalSupply) {
        this.address = address
        this.alias = alias
        this.decimals = decimals
        this.name = name
        this.status = status
        this.symbol = symbol
        this.totalSupply = totalSupply
    }

    /**
     * Constructs a <code>Kip7ContractListResponseItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {Kip7ContractListResponseItem} obj Optional instance to populate.
     * @return {Kip7ContractListResponseItem} The populated <code>Kip7ContractListResponseItem</code> instance.
     * @memberof Kip7ContractListResponseItem
     */
    Kip7ContractListResponseItem.constructFromObject = function(data, obj) {
        if (data) {
            obj = obj || new Kip7ContractListResponseItem()
            if (data.hasOwnProperty('address')) obj.address = ApiClient.convertToType(data.address, 'String')
            if (data.hasOwnProperty('alias')) obj.alias = ApiClient.convertToType(data.alias, 'String')
            if (data.hasOwnProperty('decimals')) obj.decimals = ApiClient.convertToType(data.decimals, 'Number')
            if (data.hasOwnProperty('name')) obj.name = ApiClient.convertToType(data.name, 'String')
            if (data.hasOwnProperty('status')) obj.status = ApiClient.convertToType(data.status, 'String')
            if (data.hasOwnProperty('symbol')) obj.symbol = ApiClient.convertToType(data.symbol, 'String')
            if (data.hasOwnProperty('totalSupply')) obj.totalSupply = ApiClient.convertToType(data.totalSupply, 'String')
        }
        return obj
    }

    /**
     * Contract address
     * @type {String}
     * @memberof Kip7ContractListResponseItem
     */
    Kip7ContractListResponseItem.prototype.address = undefined

    /**
     * Contract alias
     * @type {String}
     * @memberof Kip7ContractListResponseItem
     */
    Kip7ContractListResponseItem.prototype.alias = undefined

    /**
     * Token decimal place
     * @type {Number}
     * @memberof Kip7ContractListResponseItem
     */
    Kip7ContractListResponseItem.prototype.decimals = undefined

    /**
     * Contract name
     * @type {String}
     * @memberof Kip7ContractListResponseItem
     */
    Kip7ContractListResponseItem.prototype.name = undefined

    /**
     * Contract deploy status[`init`,`submitted`,`deployed`]
     * @type {String}
     * @memberof Kip7ContractListResponseItem
     */
    Kip7ContractListResponseItem.prototype.status = undefined

    /**
     * Contract symbol
     * @type {String}
     * @memberof Kip7ContractListResponseItem
     */
    Kip7ContractListResponseItem.prototype.symbol = undefined

    /**
     * Total supply (in hexadecimal)
     * @type {String}
     * @memberof Kip7ContractListResponseItem
     */
    Kip7ContractListResponseItem.prototype.totalSupply = undefined

    return Kip7ContractListResponseItem
})
