/*
 * Anchor API
 * # Introduction This document describes KAS (Klaytn API Service) Anchor API. Anchor API provides features sending metadata available to verify data reliability to ensure the reliability of service chain data to Klaytn main chain.  For more details on using the Anchor API, please refer to [Tutorial](https://docs.klaytnapi.com/tutorial/anchor-api).    # Error Codes  ## 400: Bad Request   | Code | Messages |   | --- | --- |   | 1071010 | data don't exist 1071615 | its value is out of range; size 1072100 | same payload ID or payload was already anchored 1072101 | all configured accounts have insufficient funds |
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../../ApiClient'))
    } else {
        // Browser globals (root is window)
        if (!root.AnchorApi) {
            root.AnchorApi = {}
        }
        root.AnchorApi.AnchorTransactionDetail = factory(root.AnchorApi.ApiClient)
    }
})(this, function(ApiClient) {
    /**
     * The AnchorTransactionDetail model module.
     * @class AnchorTransactionDetail
     * @version 1.0
     */

    /**
     * Constructs a new <code>AnchorTransactionDetail</code>.
     * Anchoring transaction information
     * @alias AnchorTransactionDetail
     * @class
     * @param payload {Object.<String, Object>} Anchoring data. Default settings for ID is `id = SHA256(payload)` unless ID is provided. It receives a string-type ID; unless it regards as an unset ID.
     * @param transactionHash {String} Transaction hash of anchoring transactions
     */
    const AnchorTransactionDetail = function(payload, transactionHash) {
        this.payload = payload
        this.transactionHash = transactionHash
    }

    /**
     * Constructs a <code>AnchorTransactionDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {AnchorTransactionDetail} obj Optional instance to populate.
     * @return {AnchorTransactionDetail} The populated <code>AnchorTransactionDetail</code> instance.
     * @memberof AnchorTransactionDetail
     */
    AnchorTransactionDetail.constructFromObject = function(data, obj) {
        if (data) {
            obj = obj || new AnchorTransactionDetail()
            if (data.hasOwnProperty('payload')) obj.payload = ApiClient.convertToType(data.payload, { String: Object })
            if (data.hasOwnProperty('transactionHash')) obj.transactionHash = ApiClient.convertToType(data.transactionHash, 'String')
        }
        return obj
    }

    /**
     * Anchoring data. Default settings for ID is `id = SHA256(payload)` unless ID is provided. It receives a string-type ID; unless it regards as an unset ID.
     * @type {Object.<String, Object>}
     * @memberof AnchorTransactionDetail
     */
    AnchorTransactionDetail.prototype.payload = undefined

    /**
     * Transaction hash of anchoring transactions
     * @type {String}
     * @memberof AnchorTransactionDetail
     */
    AnchorTransactionDetail.prototype.transactionHash = undefined

    return AnchorTransactionDetail
})
